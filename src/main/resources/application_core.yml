gloab:
  # 开启：数据库字段是否开启,下划线转java驼峰命名
  column-underline: true
  # 开启：数据库表名是否开启,下划线转java驼峰命名
  table-underline: true
  # 项目名称（用于文件生成时的doc内容）
  project-name: MyTest
  # （数组）仅生成的表名设置 这两个配置二选一，不可同时使用 可不区分大小写
  generate-include:
  # （数组）除了下列表不生成，其他表都生成 可不区分大小写
  generate-exclude:

  # 数据源配置
  datasource:
    url: jdbc:mysql://127.0.0.1:3306/test?serverTimezone=Asia/Shanghai&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=false
    username: root
    password: 123456
    driver-class-name: com.mysql.cj.jdbc.Driver


module:
  # 项目根路径
  project_path: D:\project\src\main

  # pojo 生成
  pojo:
    # 是否开启
    enable: true
    # 是否生成ApiModelProperty注解 使用字段备注生成
    apimodel-enable: true
    # 文件输出目录 格式为 绝对路径+包路径
    path: \java\com.example.springboottest.mysqltopojo.pojo
  # vo生成
  vo:
    enable: true
    # 若为空，将默认生成在：${module.pojo.path}/vo
    path:
  # mapper.java 生成
  mapper:
    enable: true
    path: \java\com.example.springboottest.mysqltopojo.mapper
  # mapper.xml 生成  生成xml
  mapper-xml:
    enable: true
    path: \resources\mapper
  # service 生成
  service:
    enable: true
    # 接口输出目录 必须
    path-iface: \java\com.example.springboottest.mysqltopojo.service
    # 实现类输出目录 若为空，将默认生成在：${module.service.path-iface}/impl
    path-impl:
  # controller 生成
  controller:
    enable: true
    path: \java\com.example.springboottest.mysqltopojo.controller
